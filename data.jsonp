{"source":"docs/getting-started/_category_.json","content":"{\n  \"label\": \"Getting Started\",\n  \"position\": 2,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/getting-started/ingest-sources.md","content":"---\nsidebar_position: 3\n---\n\n# Ingest Data Sources\n\nIn order to be able to ask questions to the EnhanceDocs Server we need to ingest the source where EnhanceDocs will gather knowledge from.\nIn this page, we will use EnhanceDocs Docs site as the data source for illustration purpose but feel feed to feed any data that you consider relevant, your docs, code, etc.\n\n\n## Downloading EnhanceDocs Docs\n\n```bash\ngit clone git@github.com:enhancedocs/docs.git && cd docs\n```\n\n## Configuring local environment\n\nProvide your EnhanceDocs Server URL\n\n```bash\nexport API_BASE_URL=http://127.0.0.1:8080\n```\n\nOptional. If you have set an API Key for your EnhanceDocs Server make sure to set that one too.\n```bash\nexport ENHANCEDOCS_API_KEY=sk_...\n```\n\n## Build the docs\n\n```bash\nenhancedocs build docs\n```\n\n## Ingest data to the EnhanceDocs Server API\n\n```bash\nenhancedocs push\n```\n\n## Ask a question!\n\n```bash\nenhancedocs ask How do I get started?\n```\n\n## Additional Resources\n- Using Github Actions to automate the build and ingestion of your docs [guide](../managed/getting-started/configure-cd#option-a-using-enhancedocs-github-action)\n"}
{"source":"docs/getting-started/install-enhancedocs-cli.md","content":"---\nsidebar_position: 2\n---\n\n# Install EnhanceDocs CLI\n\nThe EnhanceDocs CLI, `enhancedocs`, is a fully functional JavaScript and Node.js +14.x Command Line Interface for interacting with EnhanceDocs Server deployments. \nYou can use the EnhanceDocs CLI ingest new data sources, or test queries.\n\n## Download an install EnhanceDocs CLI\n\nYou can install and configure EnhanceDocs using this command:\n\n### Requirements\n- [Node.js v14+ LTS](https://nodejs.org/)\n\n```bash npm2yarn\nnpm install -g enhancedocs\n```\n"}
{"source":"docs/getting-started/install-enhancedocs-server.md","content":"---\nsidebar_position: 1\n---\n\n# Installing EnhanceDocs Server\n\nThe most convenient way to utilize *EnhanceDocs Server* is by running the pre-built image from [Docker Hub](https://hub.docker.com/r/enhancedocs/enhancedocs). Ensure that [Docker](https://docs.docker.com/get-docker/) is installed on your system before proceeding.\n\n### Requirements\n\n**EnhanceDocs Server** depends on the [OpenAI API](https://platform.openai.com/docs/api-reference), which means you need to supply an `OPENAI_API_KEY` as an environment variable.\n\nTo obtain an `OPENAI_API_KEY`, sign up on the [OpenAI Platform](https://platform.openai.com/), navigate to [API Keys](https://platform.openai.com/account/api-keys), and create a new key.\n\n## Launching EnhanceDocs Server\n\nTo launch EnhanceDocs Server, execute the following command:\n\n```bash\ndocker run -p 8080:8080 \\\n  -v $(pwd)/.enhancedocs/data:/data/enhancedocs \\\n  -v $(pwd)/.enhancedocs/config:/etc/enhancedocs \\\n  --env OPENAI_API_KEY=sk-... \\\n  enhancedocs/enhancedocs\n```\n\nBy doing so, EnhanceDocs will employ the default configuration and store all data in the `./.enhancedocs` directory.\n\nOptionally, you can provide the following environment variables:\n\n- `ENHANCEDOCS_API_KEY`: Optional; by default, you can input data into EnhanceDocs without an API Key, which makes working in your local environment more comfortable. However, we strongly recommend setting this variable for production use.\n- `ENHANCEDOCS_ACCESS_TOKEN`: Optional; this client-side token is recommended for production use in conjunction with CORS to ensure that only your site can make API requests.\n\n## Managed EnhanceDocs\n\nWhile EnhanceDocs is free and open-source, requiring self-hosting, you can also opt for the managed version of EnhanceDocs. This alternative offers out-of-the-box integrations with popular tools like Notion, Slack, Teams, Confluence, Discord, and more.\n\nVisit https://enhancedocs.com for more information.\n"}
{"source":"docs/getting-started/query-the-docs.md","content":"---\nsidebar_position: 4\n---\n\n# Querying the Docs\n\n## Asking the Docs Using the CLI\n\nTo ask the docs using the CLI, enter the following command:\n\n```bash\nenhancedocs ask How do I get started?\n```\n\nThe response will be in JSON format. You can optionally use [jq](https://stedolan.github.io/jq/) to prettify the response or access specific parts of it.\n\n```bash\nenhancedocs ask How do I get started? | jq .\n```\n\n## Asking the Docs Using Curl\n\nTo ask the docs using curl, use the following command:\n\n```bash\ncurl ${API_BASE_URL}/ask?question=How+do+I+get+started? \\\n   -H \"Accept: application/json\" \\\n   -H \"Authorization: Bearer ${ENHANCEDOCS_API_KEY}\" | jq .\n```\n\n## Summary\n\nCongratulations on taking the first steps towards utilizing AI-powered search! In this chapter, you've learned how to:\n\n- Install EnhanceDocs Server and CLI\n- Ingest your first data source\n- Perform AI-powered searches using the CLI and curl\n\nWhile this setup provides a solid foundation, implementing EnhanceDocs in real-world scenarios may require additional work. To make the process easier, we offer pre-built integrations and components that can be used with your preferred productivity tools or website frameworks. Explore the following guides for more information:\n\n- [React and Docusaurus Search Sites](../integrations/docusaurus)\n- [EnhanceDocs on Your Discord Community Server](../integrations/discord.md)\n- [EnhanceDocs on Your Slack Workspace](../integrations/slack)\n"}
{"source":"docs/index.md","content":"---\nsidebar_position: 1\n---\n\n# Introduction\n\nWelcome to the *EnhanceDocs Documentation*, a comprehensive guide for utilizing **EnhanceDocs**, \nan [Open-source](https://en.wikipedia.org/wiki/Open-source_software) AI-powered search engine specifically designed for \nyour documentation.\n\n### Integrations\n\n- [React and Docusaurus Search Sites](./integrations/docusaurus)\n- [EnhanceDocs on Your Discord Community Server](./integrations/discord.md)\n- [EnhanceDocs on Your Slack Workspace](./integrations/slack)\n\n## Who is EnhanceDocs for?\n\nEnhanceDocs is a versatile tool that caters to a diverse range of users. Here are some of the key groups that can \nbenefit from EnhanceDocs:\n\n### Teams of Developers\n\nDevelopers working in teams often have to manage extensive documentation for various projects. EnhanceDocs helps \nstreamline this process by providing an efficient and user-friendly search engine that allows developers to quickly find \nrelevant information, minimize errors, and improve collaboration.\n\n### Open Source Communities\n\nOpen source communities thrive on collaboration and sharing of knowledge. EnhanceDocs empowers these communities \nto easily navigate and extract valuable information from their documentation, fostering a more productive and supportive \nenvironment for contributors and maintainers alike.\n\n### Companies\n\nEnhanceDocs alleviates this problem by providing a natural language approach to searching documentation, making it \neasier for employees to find the information they need. By reducing the reliance on subject matter experts for \ninformation retrieval, EnhanceDocs allows companies to save time, improve efficiency, and ensure that their valuable \ndocumentation is fully utilized.\n\n## Getting started\n\n### EnhanceDocs Managed\n\nWe recommend using [EnhanceDocs Managed](../managed) with free tier to get started fast. We have a free tier plan up to 1.000 requests / month\nwhich tends to be sufficient for most projects, and if you are running it on an open-source project our Pro plan is FREE.\nFor both cases simply [sign up](https://app.enhancedocs.com/sign-up), we take care of the rest.\n\n### EnhanceDocs Self-hosted\n\nAlternatively you can run EnhanceDocs Server on your own. Following the [Getting started](./category/getting-started) guide.\n\n## Source Code and Licence\n\n- **EnhanceDocs Server** source code is available on [github](https://github.com/enhancedocs/enhancedocs). **EnhanceDocs Server** is published under the [GNU Affero General Public License v3.0](https://github.com/enhancedocs/enhancedocs/blob/main/LICENSE)\n- **EnhanceDocs CLI (Command Line Interface)** source code is available on [github](https://github.com/enhancedocs/cli). **EnhanceDocs CLI** is published under the [Apache-2.0 license](https://github.com/enhancedocs/cli/blob/main/LICENSE)\n- **EnhanceDocs Search** source code is available on [github](https://github.com/enhancedocs/enhancedocs-search). **EnhanceDocs Search** is published under the [Apache-2.0 license](https://github.com/enhancedocs/enhancedocs-search/blob/main/LICENSE)\n- **EnhanceDocs Documentation** source code is available on [github](https://github.com/enhancedocs/docs). **EnhanceDocs Documentation** is published under the [Apache-2.0 license](https://github.com/enhancedocs/docs/blob/main/LICENSE)\n\n\n## Additional Resources\n\nAdditional collection of resources we think may be useful as you implement EnhanceDocs in your site!\n\n- [Our website](http://enhancedocs.com/): If you want to know more about what we do.\n- [Github Discussions](https://github.com/enhancedocs/enhancedocs/discussions): Any questions about EnhanceDocs? Ask the community!\n- [Discord](https://discord.com/invite/AUDa3KZavw): Join us on our Discord to discuss all things EnhanceDocs!\n"}
{"source":"docs/integrations/_category_.json","content":"{\n  \"label\": \"Integrations\",\n  \"position\": 3,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/integrations/discord.md","content":"---\nsidebar_position: 2\n---\n\nimport ss from './assets/discord_ss.png';\n\n# Integrating with Discord\n\nTo enable Discord integration with EnhanceDocs Server, follow these steps:\n\n1. Update the `config.json` file by adding the following key-value pair within the `integrations` object:\n\n```js\n{\n  ...\n  \"integrations\": {\n    ...\n    \"discord\": true\n  }\n}\n```\n\n2. Provide the `DISCORD_TOKEN` as an environment variable in the `docker run` command. To do this, you need to create a Discord developer account, set up a new application, enable message content intent in the bot settings, and install the bot on your server with the `bot` and `administrator` scopes.\n\n## Creating a Discord Developer Account and Application\n\n1. Go to the [Discord Developer Portal](https://discord.com/developers/applications) and sign in with your Discord account.\n2. Click on the \"New Application\" button in the top right corner.\n3. Enter a name for your application and click \"Create\".\n4. In the application settings, navigate to the \"Bot\" tab and click \"Add Bot\".\n5. Enable the \"Message Content Intent\" option in the bot settings.\n\n## Generating the OAuth2 URL and Installing the Bot\n\n1. In the application settings, go to the \"OAuth2\" tab.\n2. In the \"Scopes\" section, select the \"bot\" and \"administrator\" options.\n3. Click on the \"URL Generator\" tab to generate the OAuth2 URL.\n4. Follow the generated URL to add the bot to your desired Discord server.\n\n## Running EnhanceDocs Server with Discord Integration\n\nOnce you have completed the steps above, update your `docker run` command to include the `DISCORD_TOKEN` environment variable:\n\n```bash\ndocker run -p 8080:8080 \\\n  -v $(pwd)/.enhancedocs/data:/data/enhancedocs \\\n  -v $(pwd)/.enhancedocs/config:/etc/enhancedocs \\\n  --env OPENAI_API_KEY=sk-... \\\n  --env DISCORD_TOKEN=your_discord_token \\\n  enhancedocs/enhancedocs\n```\n\nReplace `your_discord_token` with the token you obtained from the Discord Developer Portal.\n\n## Summary\n\nBy following these steps, you can successfully enable Discord integration for EnhanceDocs Server, allowing you to access the AI-powered search engine within your Discord community server.\n\n<div>\n  <img src={ss} alt=\"EnhanceDocs Adding to Existing Project\" width=\"100%\" style={{ borderRadius: 8 }} />\n</div>\n"}
{"source":"docs/integrations/docusaurus.md","content":"---\nsidebar_position: 1\n---\n\nimport ss from './assets/docusaurus_ss.png';\n\n# Integrating with Docusaurus\n\n*EnhanceDocs Search* is an open-source search component designed for `React` projects, which can be easily integrated into your Docusaurus site.\n\n## Installation\n\nTo add `EnhanceDocs Search` to your project, execute the following command:\n\n```bash npm2yarn\nnpm install enhancedocs-search\n```\n\n## Adding the Search Component\n\nCreate a new file `src/theme/SearchBar.js` with the following content:\n\n```js\n// src/theme/SearchBar.js\n\nimport React from 'react';\nimport EnhancedSearch from 'enhancedocs-search';\n\nimport 'enhancedocs-search/dist/style.css';\n\nexport default function SearchBarWrapper(props) {\n  return (\n    <EnhancedSearch\n      config={{\n        enhancedSearch: {\n          apiBaseURL: \"your_api_base_url\",\n          accessToken: \"your_app_access_token\",\n        }\n      }}\n      {...props}\n    />\n  );\n}\n```\n\nReplace `your_api_base_url` with your API base URL, `your_app_access_token` with your EnhanceDocs Server access token, and `your_project_id` with your project ID.\n\n### Defaults\n\nIf `your_api_base_url` is not provided, it will default to the EnhanceDocs managed URL. The access token is not required and should not be provided if you haven't set up one. If you are using the managed EnhanceDocs service, make sure to also provide the `projectId`.\n\n## Summary\n\nWith these changes, your Docusaurus site will now use the AI-powered search engine provided by EnhanceDocs for your documentation.\n\nEnjoy the benefits of an AI-powered search engine for your Docusaurus documentation site! 🚀🚀\n\n<div>\n  <img src={ss} alt=\"EnhanceDocs Adding to Existing Project\" width=\"100%\" style={{ borderRadius: 8 }} />\n</div>\n"}
{"source":"docs/integrations/qdrant.md","content":"---\nsidebar_position: 4\n---\n\n# Integrating with Quadrant\n\nQuadrant integration provides an efficient and scalable solution for managing vector databases within EnhanceDocs. By using Quadrant, you can improve performance, especially with large data sets, making it the preferred option for production environments.\n\nTo enable Quadrant integration, you need to provide the `QDRANT_URL` and `QDRANT_API_KEY` as environment variables when running EnhanceDocs Server. Make sure you have a Quadrant server set up and running before proceeding with the integration.\n\n## Benefits of Using Quadrant as the Vector Database\n\n- **Scalability**: Quadrant is designed to handle large data sets, providing better performance and stability in production environments.\n- **Ease of management**: Quadrant simplifies the management of vector databases, minimizing the need for manual intervention.\n- **Optimized search**: Quadrant provides a more efficient vector search compared to the local (default) setup, resulting in faster search results and a better user experience.\n\n## Running EnhanceDocs Server with Quadrant Integration\n\nUpdate your `docker run` command to include the `QDRANT_URL` and `QDRANT_API_KEY` environment variables:\n\n```bash\ndocker run -p 8080:8080 \\\n  -v $(pwd)/.enhancedocs/data:/data/enhancedocs \\\n  -v $(pwd)/.enhancedocs/config:/etc/enhancedocs \\\n  --env OPENAI_API_KEY=sk-... \\\n  --env QDRANT_URL=your_qdrant_url \\\n  --env QDRANT_API_KEY=your_qdrant_api_key \\\n  enhancedocs/enhancedocs\n```\n\nReplace `your_qdrant_url` with the URL of your running Quadrant server, and `your_qdrant_api_key` with the corresponding API key.\n\n## Summary\n\nBy following these steps, you can successfully integrate EnhanceDocs with Quadrant, unlocking better performance and scalability for your AI-powered search engine, especially when dealing with large data sets in production environments.\n\n### Additional Resources\n\n- [Quadrant documentation](https://qdrant.tech/documentation/)\n- [Quadrant cloud](https://cloud.qdrant.io/)\n"}
{"source":"docs/integrations/slack.md","content":"---\nsidebar_position: 3\n---\n\nimport ss from './assets/slack_ss.png';\n\n# Integrating with Slack\n\nTo enable Slack integration with EnhanceDocs Server, follow these steps:\n\n1. Update the `config.json` file by adding the following key-value pair within the `integrations` object:\n\n```json\n{\n  ...\n  \"integrations\": {\n    ...\n    \"discord\": true\n  }\n}\n```\n\n2. Provide the `SLACK_BOT_TOKEN` and `SLACK_SIGNING_SECRET` as environment variables in the `docker run` command. To do this, you need to create a Slack bot, subscribe to the `app_mention` event, and enable the required scopes/permissions.\n\n## Creating a Slack Bot\n\n1. Go to the [Slack API portal](https://api.slack.com/apps) and sign in with your Slack account.\n2. Click on the \"Create New App\" button.\n3. Select \"From scratch\" and enter a name for your app, then choose the desired workspace and click \"Create App\".\n4. In the \"Add features and functionality\" section, click on \"Bots\" and then \"Add a bot user\".\n5. Set a display name and default username for the bot, then click \"Add Bot User\" and \"Save Changes\".\n\n## Enabling Events and Subscribing to the App Mention Event\n\n1. In the app settings, navigate to the \"Event Subscriptions\" tab and toggle on \"Enable Events\".\n2. Enter the \"Request URL\" (which should be the URL of your EnhanceDocs server with the `/integrations/slack/events` endpoint).\n3. In the \"Subscribe to bot events\" section, click \"Add Bot User Event\" and choose the `app_mention` event.\n4. Click \"Save Changes\".\n\n## Adding Required Scopes/Permissions\n\n1. Go to the \"OAuth & Permissions\" tab in the app settings.\n2. Scroll to the \"Scopes\" section and add the following bot token scopes: `app_mentions:read`, `channels:history`, `chat:write`, `groups:history`, `im:history`, and `mpim:history`.\n3. Click \"Save Changes\".\n\n## Installing the App and Obtaining the Bot Token\n\n1. Scroll to the top of the \"OAuth & Permissions\" page and click \"Install App to Workspace\".\n2. Authorize the app.\n3. After installation, you will see the `SLACK_BOT_TOKEN` under \"OAuth Tokens for Your Workspace\". Copy the token for later use.\n\n## Running EnhanceDocs Server with Slack Integration\n\nOnce you have completed the steps above, update your `docker run` command to include the `SLACK_BOT_TOKEN` and `SLACK_SIGNING_SECRET` environment variables:\n\n```bash\ndocker run -p 8080:8080 \\\n  -v $(pwd)/.enhancedocs/data:/data/enhancedocs \\\n  -v $(pwd)/.enhancedocs/config:/etc/enhancedocs \\\n  --env OPENAI_API_KEY=sk-... \\\n  --env SLACK_BOT_TOKEN=xoxb-your_slack_bot_token \\\n  --env SLACK_SIGNING_SECRET=your_slack_signing_secret \\\n  enhancedocs/enhancedocs\n```\n\nReplace `xoxb-your_slack_bot_token` with the bot token you obtained from the Slack API portal, and `your_slack_signing_secret` with the corresponding signing secret.\n\n## Summary\n\nBy following these steps, you can successfully enable Slack integration for EnhanceDocs Server, allowing you to access the AI-powered search engine within your Slack workspace.\n\n<div>\n  <img src={ss} alt=\"EnhanceDocs Adding to Existing Project\" width=\"100%\" style={{ borderRadius: 8 }} />\n</div>\n"}
{"source":"docs/managed/_category_.json","content":"{\n  \"label\": \"EnhanceDocs Managed\",\n  \"position\": 4,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/managed/getting-started/_category_.json","content":"{\n  \"label\": \"Getting Started\",\n  \"position\": 2,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/managed/getting-started/configure-cd.md","content":"---\nsidebar_position: 4\nsidebar_label: ⚙️ Build and Publish your Docs\ndescription: Configure your CD pipelines to build and push\n---\n\n# Configure your CD pipelines to build and push\n\nWe believe in automation, that's why you have available two quick set up options to build and publish your documentation.\n\n## Option A: Using EnhanceDocs GitHub Action\n\nUse your Organization Secret API Key (e.g.: `sk_123ab456c7890f3b211ab1a6b0af14e8ea4284c5701ced95`) to build and publish using the GitHub action.\n\n```yaml\nsteps:\n  - name: Checkout Repository\n    uses: actions/checkout@v3\n\n  - name: Install EnhanceDocs CLI\n    uses: enhancedocs/enhancedocs-github-action@0.1.0\n    with:\n      # More about EnhanceDocs Secret API Key: https://docs.enhancedocs.com/security/api-keys\n      api-key: ${{ secrets.ENHANCEDOCS_API_KEY }}\n\n  - name: Build Docs\n    run: enhancedocs build docs\n\n  - name: Pushish Docs\n    run: enhancedocs push <project_id>\n```\n\nYou can find more information [here](https://github.com/enhancedocs/enhancedocs-github-action).\n\n## Option B: Install EnhanceDocs CLI\n\nRun in any environment! Install the CLI and build and publish your documentation in a few seconds 🚀🚀\n\n```bash\nnpm install -g enhancedocs\n```\n\nSet EnhanceDocs API Key as an environment variable. Make sure to store it securely read more about [API Keys](../../security/api-keys.md)\n\n```bash\nexport ENHANCEDOCS_API_KEY=sk_123ab456c7890f3b211ab1a6b0af14e8ea4284c5701ced95\n```\n\nBuild and publish your docs. Replace `<path_to_docs_folder>` with the path to your documentation folder, e.g.: `docs`.\n\n```bash\nenhancedocs build <path_to_docs_folder>\n```\n```bash\nenhancedocs push <project_id>\n```\n"}
{"source":"docs/managed/getting-started/create-account.md","content":"---\nsidebar_position: 1\nsidebar_label: 👋 Create an Account\ndescription: Sign up and join an organization\nsidebar_custom_props:\n  type: generated-index\n  title: Tutorial overview\n  description: Tutorial overview\n---\n\nimport enhancedocsSignUpUrl from './assets/enhancedocs-signup.png';\n\n# Create an account\n\nThis is where it all begins. EnhanceDocs is a managed AI-powered search, therefore we managed the infrastructure for you 🚀🚀\n\n<div align=\"center\" style={{ margin: '24px 0' }}>\n  <a href=\"https://app.enhancedocs.com/sign-up\" alt=\"EnhanceDocs Sign up\">\n    <img src={enhancedocsSignUpUrl} alt=\"EnhanceDocs Sign Up\" width=\"200\" />\n  </a>\n</div>\n\n- Create your account [here](https://app.enhancedocs.com/sign-up).\n- If you already have an account, you can [sign in](https://app.enhancedocs.com/sign-in) and start [setting up your project](./set-up-project).\n- Join an already created organization by clicking the invitation on your email or from [here](https://app.enhancedocs.com/sign-up/invite).\n"}
{"source":"docs/managed/getting-started/enhanced-search.md","content":"---\nsidebar_position: 3\nsidebar_label: 🚀 Add to an Existing Project\ndescription: Add our Enhanced Search into any React project\n---\n\nimport enhancedocsAddingExistingProjectUrl from './assets/enhancedocs-adding-existing-project.png';\n\n# Add to an Existing Project\n\n`EnhanceDocs Search` is an open-source search component ready to use for your `React` projects.\n\n[![GitHub](https://img.shields.io/badge/github-%23121011.svg?style=flat-square&logo=github&logoColor=white)](https://github.com/enhancedocs/enhancedocs-search)\n[![NPM](https://img.shields.io/badge/NPM-%23CB3837.svg?style=flat-square&logo=npm&logoColor=white)](https://www.npmjs.com/package/enhancedocs-search)\n[![Downloads](https://img.shields.io/npm/dm/enhancedocs-search.svg)](https://www.npmjs.com/package/enhancedocs-search)\n\n```bash npm2yarn\nnpm install enhancedocs-search\n```\n\nAdd the search where you like in your code!\nYou will need to use the credentials from the [previous step](./set-up-project#get-the-credentials).\n\n```js\nimport EnhancedSearch from 'enhancedocs-search';\n\nimport 'enhancedocs-search/dist/style.css';\n\n<EnhancedSearch\n  config={{\n    enhancedSearch: {\n      projectId: \"1234a5678b98126bfdbdc6a6\",\n      accessToken: \"pk_a12345b0cd1c5951f810dba47c49261296cd6ed41cfca5cf\"\n    }\n  }}\n  {...props}\n/>\n```\n\n## Docusaurus Example\n\nConfigure [Docusaurus](https://docusaurus.io/) theme to use your own search.\nSee official documentation [here](https://docusaurus.io/docs/search#using-your-own-search).\n\n```js\n// src/theme/SearchBar.js\n\nimport React from 'react';\nimport EnhancedSearch from 'enhancedocs-search';\n\nimport 'enhancedocs-search/dist/style.css';\n\nexport default function SearchBarWrapper(props) {\n  return (\n    <EnhancedSearch\n      config={{\n        enhancedSearch: {\n          projectId: \"1234a5678b98126bfdbdc6a6\",\n          accessToken: \"pk_a12345b0cd1c5951f810dba47c49261296cd6ed41cfca5cf\"\n        }\n      }}\n      {...props}\n    />\n  );\n}\n```\n\nNow you can start using your AI-powered search engine for your documentation 🚀🚀\n\n<div align=\"center\" style={{ margin: '24px 0' }}>\n  <img src={enhancedocsAddingExistingProjectUrl} alt=\"EnhanceDocs Adding to Existing Project\" width=\"800\" style={{ borderRadius: 16 }} />\n</div>\n"}
{"source":"docs/managed/getting-started/set-up-project.md","content":"---\nsidebar_position: 2\nsidebar_label: 📦 Set up your Organization\ndescription: Create your first project and get the credentials\n---\n\nimport enhancedocsCreateProjectUrl from './assets/enhancedocs-create-project.png';\n\n# Set up your project\n\nOnce you are in the platform, you can create your first project.\n\nWhen you create a new project we will need just a few information:\n\n- **Project name**: You will see all your projects in the dashboard.\n- **Docs base url**: It is used to auto-generate links on the prompted answer and at the sources links at the bottom of the results.\n- **Project description**: A short project description to inform the AI towards the scope of answers it should only provide.\n\n<div align=\"center\" style={{ margin: '24px 0' }}>\n  <img src={enhancedocsCreateProjectUrl} alt=\"EnhanceDocs Sign Up\" width=\"800\" style={{ borderRadius: 16 }} />\n</div>\n\n## Get the credentials\n\nOnce your project is created, you can get your credentials to start using the **Enhanced Search**!\n\n- `projectId`: You can find it on the projects list, next to the project name (e.g.: `1234a5678b98126bfdbdc6a6`).\n- `accessToken` Go to you profile on the top right corner, then click `Organization settings`. You will find your public and private keys in the [API Keys](https://app.enhancedocs.com/settings/api-keys) section:\n  - Public key: `pk_a12345b0cd1c5951f810dba47c49261296cd6ed41cfca5cf`\n  - Private key: `sk_123ab456c7890f3b211ab1a6b0af14e8ea4284c5701ced95`\n\nThese keys will allow you to authenticate API requests. Learn more about [API Keys security](../../security/api-keys.md)\n"}
{"source":"docs/managed/graphql-api/_category_.json","content":"{\n  \"label\": \"GraphQL API\",\n  \"position\": 4,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/managed/graphql-api/authentication.md","content":"---\nsidebar_position: 2\n---\n\n# Authentication\n\nThe EnhanceDocs GraphQL API uses [API keys](../../security/api-keys.md) to authenticate requests. You can view and manage your API keys in your [EnhanceDocs account](https://app.enhancedocs.com/settings/api-keys).\n\nGet an API Key from your EnhanceDocs account settings page, [API Keys](https://app.enhancedocs.com/settings/api-keys)\n\nYour API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.\n\nAuthentication to the API is performed via [HTTP Bearer Authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/).\n\nProvide your API key as the Bearer value `Authorization: Bearer sk_345...`\n\nAll API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP will fail. API requests without authentication will also fail.\n\n# The GraphQL endpoint\n\n`https://api.enhancedocs.com/graphql`\n\nThe endpoint remains constant no matter what operation you perform.\n"}
{"source":"docs/managed/graphql-api/index.md","content":"---\nsidebar_position: 1\n---\n\n# Introduction\n\nTo create integrations, retrieve data, and automate your workflows, use the EnhanceDocs GraphQL API.\n\n## About the GraphQL API\n\nThe EnhanceDocs GraphQL API offers flexibility and the ability to define precisely the data you want to fetch.\n\n## Why EnhanceDocs is using GraphQL\n\nEnhanceDocs chose GraphQL for our API because it offers significantly more flexibility for our integrators.\nThe ability to define precisely the data you want—and only the data you want—is a powerful advantage over the REST API. GraphQL lets you replace multiple REST requests with a single call to fetch the data you specify.\n\n## Overview\n- [Authentication](authentication.md)\n- [Public schema](public-schema.md)\n"}
{"source":"docs/managed/graphql-api/public-schema.md","content":"---\nsidebar_position: 3\n---\n\n# Public schema\n\nDownload the public schema for the EnhanceDocs GraphQL API.\n\nYou can [perform introspection](https://graphql.org/learn/introspection/) against the EnhanceDocs GraphQL API directly.\nAlternatively, you can download the latest version of the public schema here:\n\n[schema.docs.graphql](https://api.enhancedocs.com/schema.docs.graphql)\n"}
{"source":"docs/managed/index.md","content":"---\nsidebar_position: 1\n---\n\n# What is EnhanceDocs Managed?\n\nEnhanceDocs Managed provides an easy way to host and manage your EnhanceDocs server on the cloud. This tutorial guides you through creating an Atlas cluster, connecting to it, and loading sample data.\n\n#### EnhanceDocs Managed on a 5m video\n\n\n<div style={{ position: \"relative\", paddingBottom: \"62.5%\" }} height=\"0\">\n    <iframe style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", borderRadius: 8 }} src=\"https://www.loom.com/embed/000565b360af45ac91c0c532a9537a20\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>\n    </iframe>\n</div>\n"}
{"source":"docs/managed/integrations/_category_.json","content":"{\n  \"label\": \"Integrations\",\n  \"position\": 3,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/managed/integrations/discord.md","content":"---\nsidebar_position: 2\nsidebar_label: Integrating with Discord\ndescription: Discord integration\n---\n\nimport enhancedocsDiscordExampleUrl from './assets/enhancedocs-discord-example.png';\n\n# Integrating with your Discord server\n\nLearn how integrate EnhanceDocs in your community server.\n\nMany EnhanceDocs users engage with the community on Discord. Discord is where they get to know more about their users\nand have a more direct feedback communication with the community instead of just searching up on the docs.\n\n## Prerequisites\n\nConfigure your CD pipelines to build and push your documentation before integrating with Discord.\nYou can see how to do it [here](../getting-started/configure-cd).\n\n## 1. Add EnhanceDocs Bot to your Discord Server\n\nFirst we would need authorize the EnhanceDocs Discord Bot to be in your Discord server.\n\nTo authorize the Discord Bot go to [Organization settings](https://app.enhancedocs.com/settings) > [Integrations](https://app.enhancedocs.com/settings/integrations)\nfrom your EnhanceDocs Dashboard. Click on the Discord integration and follow the oauth2 flow and selecting the server you wish to install.\n\n## 2. Create the communication channel\n\nCreate a channel in your Discord server with the name **#ask-enhancedocs**.\n\n**#ask-enhancedocs** is the channel that our bot will **only** listen to `/enhancedocs` commands.\n\n## 3. Start using it 🚀🚀\n\nNow you are done with the setup! Give it a try by asking the EnhanceDocs Discord bot a question about your project.\ne.g.: `/enhancedocs question Who are you?`\n\n<div align=\"center\" style={{ margin: '24px 0' }}>\n  <img src={enhancedocsDiscordExampleUrl} alt=\"EnhanceDocs Discord Bot Example\" width=\"500\" style={{ borderRadius: 16 }} />\n</div>\n\n## FAQ\n\n#### Can EnhanceDocs Discord Bot be installed in multiple servers?\n\nNot at the time, but we would love to hear about your use case to potentially work on a solution that we can deliver to you and many EnhnaceDocs users.\n\n#### Can I set up EnhanceDocs Discord Bot in a different channel that #ask-enhancedocs?\n\nUnfortunately not, but we are working on solution so you can define different channels and customize it so each channel can answer to a different project documentation.\n\n#### I've a special feature request, how do I get in contact?\n\nSimply join our discord server and share it on the **#ideas-and-feedback** channel or if you prefer you can do so by filling\nthe suggestion button form in the [Integrations](https://app.enhancedocs.com/settings/integrations) page.\n"}
{"source":"docs/managed/integrations/index.md","content":"---\nsidebar_position: 1\ndescription: Easily integrate with Discord and Slack\n---\n\n# Overview\n\nIntegrations are tools and services that connect with **EnhanceDocs** to complement and extend your workflow.\n\nYou can find and set up all available integrations in your [Organization settings](https://app.enhancedocs.com/settings/integrations).\n\nRemember to configure your CD pipelines to build and push your documentation before integrating with Discord or Slack.\nYou can see how to do it [here](../getting-started/configure-cd).\n\n## Guides\n\n- [Integrating with Discord](discord.md)\n- [Integrating with Slack](slack.md)\n"}
{"source":"docs/managed/integrations/slack.md","content":"---\nsidebar_position: 3\nsidebar_label: Integrating with Slack\ndescription: Slack integration\n---\n\nimport enhancedocsSlackExampleUrl from './assets/enhancedocs-slack-example.png';\n\n# Integrating with your Slack channel\n\nLearn how integrate EnhanceDocs in any Slack workspace of your preference. Easily search through your Slack workspace to get all the information you need.\n\n## Prerequisites\n\nConfigure your CD pipelines to build and push your documentation before integrating with Slack.\nYou can see how to do it [here](../getting-started/configure-cd).\n\n## 1. Add EnhanceDocs App to your Slack channel\n\nFirst we would need authorize the EnhanceDocs Slack App to be in your Slack workspace.\n\nTo authorize Slack App go to [Organization settings](https://app.enhancedocs.com/settings) > [Integrations](https://app.enhancedocs.com/settings/integrations)\nfrom your EnhanceDocs Dashboard. Click on the Slack integration and follow the oauth2 flow and selecting the workspace and channel you wish to install.\n\n## 2. Start using it 🚀🚀\n\nNow you are done with the setup! Give it a try by asking the EnhanceDocs Slack App a question in your preferred channel.\ne.g.: `/enhancedocs Who are you?`\n\n<div align=\"center\" style={{ margin: '24px 0' }}>\n  <img src={enhancedocsSlackExampleUrl} alt=\"EnhanceDocs Slack App Example\" width=\"500\" style={{ borderRadius: 16 }} />\n</div>\n"}
{"source":"docs/security/_category_.json","content":"{\n  \"label\": \"Security\",\n  \"position\": 5,\n  \"link\": {\n    \"type\": \"generated-index\"\n  }\n}\n"}
{"source":"docs/security/api-keys.md","content":"---\nsidebar_position: 3\n---\n\n# API keys\nUse API keys to authenticate API requests.\n\nEnhanceDocs authenticates your API requests using your account’s API keys. EnhanceDocs raises an invalid request error if you don’t include a key, and an authentication error if the key is incorrect or outdated.\n\nYou can use the [App Dashboard](https://app.enhancedocs.com/settings/api-keys) to reveal, revoke, and create secret API keys.\n\n## Secret and publishable keys\n\nAll accounts have a total of two API keys by default.\n\n### Secret\nTo be used on the server-side: Must be secret and stored securely in your web or mobile app’s server-side code (such as in an environment variable or credential management system) to call EnhanceDocs APIs. Don’t expose this key on a website or embed it in a mobile application.\n\nExample: `sk_123ab456c7890f3b211ab1a6b0af14e8ea4284c5701ced95`\n\n### Publishable\nOn the client-side: Can be publicly-accessible in your web or mobile app’s client-side code (such as [enhancedocs-search](https://www.npmjs.com/package/enhancedocs-search)) to let the server know which documentation provide information for.\n\nExample: `pk_a12345b0cd1c5951f810dba47c49261296cd6ed41cfca5cf`\n"}